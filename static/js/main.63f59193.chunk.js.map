{"version":3,"sources":["components/degree-toggle.js","components/day-card.js","components/spinner.js","apidata.js","components/week-container.js","App.js","index.js"],"names":["DegreeToggle","props","degreeType","updateUnits","Fragment","className","type","name","id","value","checked","onChange","htmlFor","DayCard","reading","newDate","Date","weekday","dt","setTime","fahrenheit","Math","round","main","temp","celsius","imgURL","weather","moment","format","description","Spinner","message","API_KEY","WeekContainer","e","setState","target","console","log","state","makeRequest","a","position","lat","lon","axios","get","response","dailyData","data","list","filter","dt_txt","includes","fullData","formatCards","map","index","key","error","window","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","err","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63f59193.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nconst DegreeToggle = (props) => {\r\n  const {degreeType, updateUnits} = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <form onSubmit={handleSubmit}>\r\n        <input type=\"search\" name=\"city\" placeholder=\"Enter city\" onChange={handleChange} />\r\n        <button type=\"submit\" className=\"btn btn-success mx-2 px-5\">search</button>\r\n      </form> */}\r\n      <div className=\"form-check form-check-inline\">\r\n        <input  className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"degree-type\"\r\n                id=\"rdoCelsius\"\r\n                value=\"celsius\"\r\n                checked={degreeType === \"celsius\"}\r\n                onChange={updateUnits}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"rdoCelsius\">Celsius</label>\r\n      </div>\r\n      <div className=\"form-check form-check-inline\">\r\n        <input  className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"degree-type\"\r\n                id=\"rdoFarenheit\"\r\n                value=\"fahrenheit\"                \r\n                checked={degreeType === \"fahrenheit\"}\r\n                onChange={updateUnits}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"rdoFarenheit\">Farenheit</label>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default DegreeToggle;","import React from 'react';\r\nimport moment from 'moment';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './day-card.css';\r\n\r\nconst DayCard = ({ reading, degreeType }) => {\r\n  let newDate = new Date();\r\n  const weekday = reading.dt * 1000;\r\n  newDate.setTime(weekday);\r\n\r\n  const fahrenheit = Math.round(reading.main.temp);\r\n  const celsius = Math.round((fahrenheit - 32) * 5/9);\r\n\r\n  const imgURL = `owf owf-${reading.weather[0].id} owf-5x`;\r\n\r\n  return (\r\n    <div className=\"col-sm-2\">\r\n      <div className=\"card\">\r\n        <h3 className=\"card-title\">{moment(newDate).format('dddd')}</h3>\r\n        <p className=\"text-muted\">{moment(newDate).format('MMM Do, h:mm a')}</p>\r\n        <i className={imgURL}></i>\r\n        <h2>{degreeType === \"celsius\" ? celsius + \"°C\" : fahrenheit + \"°F\"}</h2>\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text\">{reading.weather[0].description}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DayCard;","import React from 'react'\r\n\r\nconst Spinner = (props) => {\r\n    return (\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui big text loader\">{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","//import axios from 'axios';\r\n\r\n\r\nconst API_KEY = \"6a74e65a29fd5c217ea5db3cd87107a7\";\r\n\r\n// export default axios.create({\r\n//     baseURL: `http://api.openweathermap.org/data/2.5/forecast&zip=01432&units=imperial&APPID=${API_KEY}` \r\n// });\r\n\r\nexport {API_KEY};","import React, { Component } from 'react'\r\nimport axios from  'axios';\r\nimport DegreeToggle from './degree-toggle';\r\nimport DayCard from './day-card';\r\nimport Spinner from './spinner';\r\nimport {API_KEY} from '../apidata';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default class WeekContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            position: {},\r\n            fullData: [],\r\n            dailyData: [],\r\n            degreeType: 'fahrenheit',\r\n            error: ''\r\n        }\r\n    }\r\n    updateUnits = (e) => {\r\n        this.setState({\r\n            degreeType: e.target.value\r\n        }, () => console.log(`Format changed to ${this.state.degreeType}`));\r\n    }\r\nmakeRequest = async () => {\r\n    //const apiKey ='6a74e65a29fd5c217ea5db3cd87107a7';\r\n    const {lat, lon} = this.state.position;\r\n    //const response = await axios.get(`http://api.openweathermap.org/data/2.5/forecast?zip=01432&units=imperial&APPID=${apiKey}`);\r\n    const response = await axios.get(`http://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=imperial&APPID=${API_KEY}`);\r\n\r\nconst dailyData = response.data.list.filter(reading => {   \r\n    return reading.dt_txt.includes(\"18:00:00\")\r\n    }\r\n  )\r\n  this.setState({\r\n    fullData: response.data.list,\r\n    dailyData: dailyData\r\n  })\r\n}\r\n\r\nformatCards = () => {\r\n    return this.state.dailyData.map( (reading, index) => <DayCard reading={reading} degreeType={this.state.degreeType} key={index} />)\r\n}\r\n\r\n\r\ncomponentDidMount() {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n            const lat= position.coords.latitude;\r\n            const lon= position.coords.longitude;\r\n            this.setState({position: {lat, lon}});\r\n            this.makeRequest();\r\n            \r\n        },\r\n        (err) => { this.setState({error:err.message}) }\r\n    )\r\n}\r\n\r\n\r\n    render() {\r\n\r\nif(this.state.position.lat && !this.state.error){\r\n\r\n    return  (\r\n        <div className=\"container\">\r\n            <h1>5 Day Forecast</h1>\r\n            <DegreeToggle degreeType={this.state.degreeType} updateUnits={this.updateUnits} />\r\n            <div className=\"row justify-content-center\">\r\n                {this.formatCards()}\r\n            </div>\r\n                          \r\n        </div>\r\n    )\r\n}\r\nif(!this.state.position.lat && this.state.error){\r\n\r\n    return <div className=\"text-danger\">ERROR: {this.state.error}</div>\r\n}\r\nif(!this.state.position.lat && !this.state.error){\r\n\r\n    return <Spinner message='Please accept location request!'/>;\r\n}\r\n\r\n        // return (\r\n        //     <div className=\"container\">\r\n        //         <h1>5 Day Forecast</h1>\r\n        //         <DegreeToggle degreeType={this.state.degreeType} updateUnits={this.updateUnits} />\r\n        //         <div className=\"row justify-content-center\">\r\n        //             {this.formatCards()}\r\n        //         </div>\r\n                              \r\n        //     </div>\r\n        // )\r\n    }\r\n}\r\n","import React from 'react';\nimport WeekContainer from './components/week-container';\nimport './App.css';\n//import WeekContainerFunc from './components/week-container-func';\nfunction App() {\n  return (\n    <div className=\"App\">\n       <WeekContainer /> \n  {/*<WeekContainerFunc/>*/}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}